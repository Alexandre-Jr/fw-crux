#ifndef BOARDSYSTEM_CONFIG_H
#define BOARDSYSTEM_CONFIG_H




/* Linkarch config */

// Modules

typedef enum 
{

    BOARD_SYSTEM_MODULE_ADCANALYSIS = 0,
    BOARD_SYSTEM_MODULE_COMMAND,
    BOARD_SYSTEM_MODULE_KICKCONTROL,
    BOARD_SYSTEM_MODULE_MOTORCONTROL,
    BOARD_SYSTEM_MODULE_ONBOARDDEBUG,
    BOARD_SYSTEM_MODULE_COUNT

} boardSystem_modules_t;

#define ADCANALYSIS_PERIODMS 1000
#define ADCANALYSIS_STACKSIZE 512
#define ADCANALYSIS_PRIORITY 1
#define ADCANALYSIS_COREAFFINITY true
#define ADCANALYSIS_CORENUMBER 0

#define COMMAND_PERIODMS 1000
#define COMMAND_STACKSIZE 512
#define COMMAND_PRIORITY 1
#define COMMAND_COREAFFINITY true
#define COMMAND_CORENUMBER 0

#define KICKCONTROL_PERIODMS 1000
#define KICKCONTROL_STACKSIZE 512
#define KICKCONTROL_PRIORITY 1
#define KICKCONTROL_COREAFFINITY true
#define KICKCONTROL_CORENUMBER 0

#define MOTORCONTROL_PERIODMS 1000
#define MOTORCONTROL_STACKSIZE 512
#define MOTORCONTROL_PRIORITY 1
#define MOTORCONTROL_COREAFFINITY true
#define MOTORCONTROL_CORENUMBER 0

#define ONBOARDDEBUG_PERIODMS 1000
#define ONBOARDDEBUG_STACKSIZE 512
#define ONBOARDDEBUG_PRIORITY 1
#define ONBOARDDEBUG_COREAFFINITY true
#define ONBOARDDEBUG_CORENUMBER 0


// Modes

typedef enum
{

    RUNNING_MODE = 0,
    NUMBER_OF_MODES

} boardSystem_modes_t;


// Mode transitions

typedef enum
{
    
    STAYRUNNING_MODETRANSITION = 0 

} boardSystem_modeTransition_t;




#endif // BOARDSYSTEM_CONFIG_H